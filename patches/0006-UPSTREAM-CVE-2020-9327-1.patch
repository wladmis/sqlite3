From 38c1f6abed2fba2cdd1dfdd3e2f2d56a749d0746 Mon Sep 17 00:00:00 2001
From: "Vladimir D. Seleznev" <vseleznv@altlinux.org>
Date: Tue, 19 May 2020 15:29:07 +0300
Subject: [PATCH 6/9] UPSTREAM: CVE-2020-9327 #1

https://www.sqlite.org/cgi/src/info/9d0d4ab95dc0c56e
---
 sqlite/src/expr.c      | 13 +++++++++++--
 sqlite/src/sqliteInt.h |  1 +
 sqlite/src/whereexpr.c |  8 ++++----
 3 files changed, 16 insertions(+), 6 deletions(-)

diff --git a/sqlite/src/expr.c b/sqlite/src/expr.c
index d82ef8b8c..b33d1375f 100644
--- a/sqlite/src/expr.c
+++ b/sqlite/src/expr.c
@@ -2244,6 +2244,15 @@ int sqlite3ExprIsInteger(Expr *p, int *pValue){
   return rc;
 }
 
+/*
+** Return true if p is a Column node that references a virtual table.
+*/
+int sqlite3ExprIsVtabRef(Expr *p){
+  if( p->op!=TK_COLUMN ) return 0;
+  if( p->y.pTab==0 ) return 0;
+  return IsVirtual(p->y.pTab);
+}
+
 /*
 ** Return FALSE if there is no chance that the expression can be NULL.
 **
@@ -5470,8 +5479,8 @@ static int impliesNotNullRow(Walker *pWalker, Expr *pExpr){
       testcase( pExpr->op==TK_LE );
       testcase( pExpr->op==TK_GT );
       testcase( pExpr->op==TK_GE );
-      if( (pExpr->pLeft->op==TK_COLUMN && IsVirtual(pExpr->pLeft->y.pTab))
-       || (pExpr->pRight->op==TK_COLUMN && IsVirtual(pExpr->pRight->y.pTab))
+      if( sqlite3ExprIsVtabRef(pExpr->pLeft)
+       || sqlite3ExprIsVtabRef(pExpr->pRight)
       ){
        return WRC_Prune;
       }
diff --git a/sqlite/src/sqliteInt.h b/sqlite/src/sqliteInt.h
index 53e7095da..d33d87e4f 100644
--- a/sqlite/src/sqliteInt.h
+++ b/sqlite/src/sqliteInt.h
@@ -4279,6 +4279,7 @@ int sqlite3ExprIsTableConstant(Expr*,int);
 int sqlite3ExprContainsSubquery(Expr*);
 #endif
 int sqlite3ExprIsInteger(Expr*, int*);
+int sqlite3ExprIsVtabRef(Expr*);
 int sqlite3ExprCanBeNull(const Expr*);
 int sqlite3ExprNeedsNoAffinityChange(const Expr*, char);
 int sqlite3IsRowid(const char*);
diff --git a/sqlite/src/whereexpr.c b/sqlite/src/whereexpr.c
index cec0aefd8..e99a44f15 100644
--- a/sqlite/src/whereexpr.c
+++ b/sqlite/src/whereexpr.c
@@ -377,7 +377,7 @@ static int isAuxiliaryVtabOperator(
     **       MATCH(expression,vtab_column)
     */
     pCol = pList->a[1].pExpr;
-    if( pCol->op==TK_COLUMN && IsVirtual(pCol->y.pTab) ){
+    if( sqlite3ExprIsVtabRef(pCol) ){
       for(i=0; i<ArraySize(aOp); i++){
         if( sqlite3StrICmp(pExpr->u.zToken, aOp[i].zOp)==0 ){
           *peOp2 = aOp[i].eOp2;
@@ -399,7 +399,7 @@ static int isAuxiliaryVtabOperator(
     ** with function names in an arbitrary case.
     */
     pCol = pList->a[0].pExpr;
-    if( pCol->op==TK_COLUMN && IsVirtual(pCol->y.pTab) ){
+    if( sqlite3ExprIsVtabRef(pCol) ){
       sqlite3_vtab *pVtab;
       sqlite3_module *pMod;
       void (*xNotUsed)(sqlite3_context*,int,sqlite3_value**);
@@ -422,10 +422,10 @@ static int isAuxiliaryVtabOperator(
     int res = 0;
     Expr *pLeft = pExpr->pLeft;
     Expr *pRight = pExpr->pRight;
-    if( pLeft->op==TK_COLUMN && IsVirtual(pLeft->y.pTab) ){
+    if( sqlite3ExprIsVtabRef(pLeft) ){
       res++;
     }
-    if( pRight && pRight->op==TK_COLUMN && IsVirtual(pRight->y.pTab) ){
+    if( pRight && sqlite3ExprIsVtabRef(pRight) ){
       res++;
       SWAP(Expr*, pLeft, pRight);
     }
-- 
2.25.4

